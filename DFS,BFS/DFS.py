"""
DFS는 깊이 우선 탐색이라고 한다. 가장 깊은 곳의 노드를 우선 탐색한다.
DFS는 스택 자료구조를 이용하며 구체적인 동작 과정은 다음과 같다.
1. 탐색 시작 노드를 스택에 삽입하고 방문 처리한다.
2. 스택의 최상단 노드에 방문하지 않은 인접노드가 있으면 그 인접 노드를 스택에 넣고 방문 처리한다. 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼낸다.
3. 2번의 과정을 더 이상 수행할 수 없을 때까지 반복한다.

                                            1 ------- 2
                                          /  \          \
                                        /     \          \
                                      /        \          \
                                      3         \          7
                                     |  \        \       / |
                                     |   \        \     /  |
                                     |    \        \   /   |
                                     4 --- 5         8     6
노드 1을 시작으로 DFS 탐색 순서를 나타내시오
"""

def dfs_function(graph, start, visited):
    visited[start] = True # 시작 노드는 방문한 것으로 변경
    print(start, end=' ') # 방문 한 곳 출력
    for i in graph[start]: # 시작 노드와 인접한 노드들 반복
        if not visited[i]: # 인접한 노드들 중 방문하지 않은 노드 체크
            dfs_function(graph, i, visited) # 방문하지 않은 노드를 시작 노드로 두고 반복.

graph = [
    [],
    [2, 3, 8],
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

visited = [False] * 9

dfs_function(graph, 1, visited)
